{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9fe494af-7092-4047-a86f-149a15471df0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Seasonal_ROI\n",
    "#Genre_ROI\n",
    "#Budget_ROI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "86f22e33-9fe4-4c30-b6a8-d6f4320c5530",
   "metadata": {},
   "outputs": [],
   "source": [
    "#release_date_analysis_v1\n",
    "#budget_analysis\n",
    "#genre_roi\n",
    "#movies_df2\n",
    "#movie_genre_analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6f1d6fd0-e486-4b06-8a61-1f4c373584d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import the relevant libraries to explore the datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3094ed55-553c-46ea-808e-fcc241e8f7be",
   "metadata": {},
   "outputs": [],
   "source": [
    "#zippedData/im.db K\n",
    "\n",
    "#zippedData/tmdb.movies.csv has gernes but need to translate from genre id to actual name \n",
    "#usable[genre_ids, original_title]\n",
    "\n",
    "#zippedData/tn.movie_budgets.csv K only one that has budgets\n",
    "#useable [movie, production_budget, domestic_gross\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dd6fc6e6-9201-4ebd-b855-aed8f40c3ebd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type('zippedData/bom.movie_gross.csv.gz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0767595d-a0fe-437d-9b46-3f79d0449187",
   "metadata": {},
   "outputs": [],
   "source": [
    "#import all the libraries we need\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import sqlite3 \n",
    "import scipy.stats as stats\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import make_regression\n",
    "from scipy.interpolate import make_interp_spline\n",
    "\n",
    "%matplotlib inline\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "414b3317-96df-4887-bb1f-935532e20daf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data_Exploration.ipynb            student.ipynb\n",
      "Phase 2 project description.ipynb your_database.db\n"
     ]
    }
   ],
   "source": [
    "!ls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5449381c-2d8c-474b-bbb3-ab0b4b4bc0be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/Users/andrewreusche/Documents/Flatiron2/Phase2/lessons/dsc-phase-2-project-v3/notebooks\n"
     ]
    }
   ],
   "source": [
    "!pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e0ec0e16-55b5-4126-acb1-3c772045f203",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>genre_ids</th>\n",
       "      <th>id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>title</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[12, 14, 10751]</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[14, 12, 16, 10751]</td>\n",
       "      <td>10191</td>\n",
       "      <td>en</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>28.734</td>\n",
       "      <td>2010-03-26</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[12, 28, 878]</td>\n",
       "      <td>10138</td>\n",
       "      <td>en</td>\n",
       "      <td>Iron Man 2</td>\n",
       "      <td>28.515</td>\n",
       "      <td>2010-05-07</td>\n",
       "      <td>Iron Man 2</td>\n",
       "      <td>6.8</td>\n",
       "      <td>12368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[16, 35, 10751]</td>\n",
       "      <td>862</td>\n",
       "      <td>en</td>\n",
       "      <td>Toy Story</td>\n",
       "      <td>28.005</td>\n",
       "      <td>1995-11-22</td>\n",
       "      <td>Toy Story</td>\n",
       "      <td>7.9</td>\n",
       "      <td>10174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[28, 878, 12]</td>\n",
       "      <td>27205</td>\n",
       "      <td>en</td>\n",
       "      <td>Inception</td>\n",
       "      <td>27.920</td>\n",
       "      <td>2010-07-16</td>\n",
       "      <td>Inception</td>\n",
       "      <td>8.3</td>\n",
       "      <td>22186</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             genre_ids     id original_language  \\\n",
       "0      [12, 14, 10751]  12444                en   \n",
       "1  [14, 12, 16, 10751]  10191                en   \n",
       "2        [12, 28, 878]  10138                en   \n",
       "3      [16, 35, 10751]    862                en   \n",
       "4        [28, 878, 12]  27205                en   \n",
       "\n",
       "                                 original_title  popularity release_date  \\\n",
       "0  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "1                      How to Train Your Dragon      28.734   2010-03-26   \n",
       "2                                    Iron Man 2      28.515   2010-05-07   \n",
       "3                                     Toy Story      28.005   1995-11-22   \n",
       "4                                     Inception      27.920   2010-07-16   \n",
       "\n",
       "                                          title  vote_average  vote_count  \n",
       "0  Harry Potter and the Deathly Hallows: Part 1           7.7       10788  \n",
       "1                      How to Train Your Dragon           7.7        7610  \n",
       "2                                    Iron Man 2           6.8       12368  \n",
       "3                                     Toy Story           7.9       10174  \n",
       "4                                     Inception           8.3       22186  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#preview the movie genre dataset\n",
    "movie_genre = pd.read_csv('../zippedData/tmdb.movies.csv', index_col= 0)\n",
    "movie_genre.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "fb1d6b27-211f-4c0f-bbe8-125dda883d18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "genre_ids\n",
       "2    35789\n",
       "5     6567\n",
       "0     2479\n",
       "3     1762\n",
       "4     1237\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre.genre_ids.apply(lambda x: len(x)).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6e5353fa-8b84-4472-8184-146bd4c0f062",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 26517 entries, 0 to 26516\n",
      "Data columns (total 9 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   genre_ids          26517 non-null  object \n",
      " 1   id                 26517 non-null  int64  \n",
      " 2   original_language  26517 non-null  object \n",
      " 3   original_title     26517 non-null  object \n",
      " 4   popularity         26517 non-null  float64\n",
      " 5   release_date       26517 non-null  object \n",
      " 6   title              26517 non-null  object \n",
      " 7   vote_average       26517 non-null  float64\n",
      " 8   vote_count         26517 non-null  int64  \n",
      "dtypes: float64(2), int64(2), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "movie_genre.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b7efddca-e0f8-4c0c-9835-488d52695a09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        12, 14, 10751\n",
       "1    14, 12, 16, 10751\n",
       "2          12, 28, 878\n",
       "3        16, 35, 10751\n",
       "4          28, 878, 12\n",
       "Name: genre_ids, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#this strips the brackets from the lists\n",
    "movie_genre['genre_ids'] = movie_genre['genre_ids'].apply(lambda x: x[1:-1])\n",
    "movie_genre['genre_ids'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "af921b2c-931e-41dd-a1fc-56eab6a9599e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>genre_ids</th>\n",
       "      <th>id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>title</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>14</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10751</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14</td>\n",
       "      <td>10191</td>\n",
       "      <td>en</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>28.734</td>\n",
       "      <td>2010-03-26</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>10191</td>\n",
       "      <td>en</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>28.734</td>\n",
       "      <td>2010-03-26</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7610</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  genre_ids     id original_language  \\\n",
       "0        12  12444                en   \n",
       "1        14  12444                en   \n",
       "2     10751  12444                en   \n",
       "3        14  10191                en   \n",
       "4        12  10191                en   \n",
       "\n",
       "                                 original_title  popularity release_date  \\\n",
       "0  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "1  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "2  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "3                      How to Train Your Dragon      28.734   2010-03-26   \n",
       "4                      How to Train Your Dragon      28.734   2010-03-26   \n",
       "\n",
       "                                          title  vote_average  vote_count  \n",
       "0  Harry Potter and the Deathly Hallows: Part 1           7.7       10788  \n",
       "1  Harry Potter and the Deathly Hallows: Part 1           7.7       10788  \n",
       "2  Harry Potter and the Deathly Hallows: Part 1           7.7       10788  \n",
       "3                      How to Train Your Dragon           7.7        7610  \n",
       "4                      How to Train Your Dragon           7.7        7610  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 2: Split the movie_genre column by commas and expand it into individual rows\n",
    "movie_genre['genre_ids'] = movie_genre['genre_ids'].str.split(',')  # Split by comma into lists\n",
    "movie_genre = movie_genre.explode('genre_ids', ignore_index=True)  # Expand the lists into separate rows\n",
    "\n",
    "movie_genre.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "50511a4d-2f08-40ba-8f8b-514fa94f6336",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(movie_genre['genre_ids'][1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fb685c31-7837-4065-bcc8-35ed882031a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def num_to_genre(num):\n",
    "    gerne_dict= { '28': 'Action', '12': 'Adventure', '16': 'Animation', '35': 'Comedy',\n",
    "                  '80': 'Crime', '99': 'Documetary', '18': 'Drama', '10751': 'Family',\n",
    "                  '14': 'Fantasy', '36': 'History', '27': 'Horror', '10402': 'Music',\n",
    "                  '9648': 'Mystery', '10749': 'Romance', '878': 'Science Fiction',\n",
    "                  '10770': 'TV Movie', '53': 'Thriller', '10752': 'War', '37': 'Western'\n",
    "                  }\n",
    "    return gerne_dict.get(num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "71d3566a-93df-4a6d-8aa2-8c3d19a27467",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>genre_ids</th>\n",
       "      <th>id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>title</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>Genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>14</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10751</td>\n",
       "      <td>12444</td>\n",
       "      <td>en</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>33.533</td>\n",
       "      <td>2010-11-19</td>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>10788</td>\n",
       "      <td>Family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14</td>\n",
       "      <td>10191</td>\n",
       "      <td>en</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>28.734</td>\n",
       "      <td>2010-03-26</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7610</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>10191</td>\n",
       "      <td>en</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>28.734</td>\n",
       "      <td>2010-03-26</td>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7610</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  genre_ids     id original_language  \\\n",
       "0        12  12444                en   \n",
       "1        14  12444                en   \n",
       "2     10751  12444                en   \n",
       "3        14  10191                en   \n",
       "4        12  10191                en   \n",
       "\n",
       "                                 original_title  popularity release_date  \\\n",
       "0  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "1  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "2  Harry Potter and the Deathly Hallows: Part 1      33.533   2010-11-19   \n",
       "3                      How to Train Your Dragon      28.734   2010-03-26   \n",
       "4                      How to Train Your Dragon      28.734   2010-03-26   \n",
       "\n",
       "                                          title  vote_average  vote_count  \\\n",
       "0  Harry Potter and the Deathly Hallows: Part 1           7.7       10788   \n",
       "1  Harry Potter and the Deathly Hallows: Part 1           7.7       10788   \n",
       "2  Harry Potter and the Deathly Hallows: Part 1           7.7       10788   \n",
       "3                      How to Train Your Dragon           7.7        7610   \n",
       "4                      How to Train Your Dragon           7.7        7610   \n",
       "\n",
       "       Genre  \n",
       "0  Adventure  \n",
       "1    Fantasy  \n",
       "2     Family  \n",
       "3    Fantasy  \n",
       "4  Adventure  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Strip whitespace from 'movie_title' column\n",
    "movie_genre['genre_ids'] = movie_genre['genre_ids'].str.strip()\n",
    "#Create new row Genre...\n",
    "movie_genre['Genre']= movie_genre['genre_ids'].apply( lambda x : num_to_genre(x))\n",
    "movie_genre.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d01b2662-dfbe-4184-aa84-132705669588",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/p_/7g5qyc8d5zv5nfywm65yhpkc0000gn/T/ipykernel_98186/1401509531.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  movie_genre_df2.rename(columns={'title': 'movie', 'Genre': 'genres'}, inplace=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part 1</td>\n",
       "      <td>Family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>How to Train Your Dragon</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          movie     genres\n",
       "0  Harry Potter and the Deathly Hallows: Part 1  Adventure\n",
       "1  Harry Potter and the Deathly Hallows: Part 1    Fantasy\n",
       "2  Harry Potter and the Deathly Hallows: Part 1     Family\n",
       "3                      How to Train Your Dragon    Fantasy\n",
       "4                      How to Train Your Dragon  Adventure"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_df2=movie_genre[['title','Genre']]\n",
    "movie_genre_df2.rename(columns={'title': 'movie', 'Genre': 'genres'}, inplace=True)\n",
    "movie_genre_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5e4c17bc-3322-43c3-b906-224ac7a3ceb6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "47834"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movie_genre_df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "920be079-bd1a-4baa-9592-7583791278a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>$410,600,000</td>\n",
       "      <td>$241,063,875</td>\n",
       "      <td>$1,045,663,875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>$350,000,000</td>\n",
       "      <td>$42,762,350</td>\n",
       "      <td>$149,762,350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>$330,600,000</td>\n",
       "      <td>$459,005,868</td>\n",
       "      <td>$1,403,013,963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>$317,000,000</td>\n",
       "      <td>$620,181,382</td>\n",
       "      <td>$1,316,721,747</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie  \\\n",
       "id                                                              \n",
       "1   Dec 18, 2009                                       Avatar   \n",
       "2   May 20, 2011  Pirates of the Caribbean: On Stranger Tides   \n",
       "3    Jun 7, 2019                                 Dark Phoenix   \n",
       "4    May 1, 2015                      Avengers: Age of Ultron   \n",
       "5   Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi   \n",
       "\n",
       "   production_budget domestic_gross worldwide_gross  \n",
       "id                                                   \n",
       "1       $425,000,000   $760,507,625  $2,776,345,279  \n",
       "2       $410,600,000   $241,063,875  $1,045,663,875  \n",
       "3       $350,000,000    $42,762,350    $149,762,350  \n",
       "4       $330,600,000   $459,005,868  $1,403,013,963  \n",
       "5       $317,000,000   $620,181,382  $1,316,721,747  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#preview the movie budget dataset\n",
    "movie_budget = pd.read_csv('../zippedData/tn.movie_budgets.csv', index_col= 0)\n",
    "movie_budget.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c546133b-a8d5-4f79-a4aa-947f46d0c7f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 5782 entries, 1 to 82\n",
      "Data columns (total 5 columns):\n",
      " #   Column             Non-Null Count  Dtype \n",
      "---  ------             --------------  ----- \n",
      " 0   release_date       5782 non-null   object\n",
      " 1   movie              5782 non-null   object\n",
      " 2   production_budget  5782 non-null   object\n",
      " 3   domestic_gross     5782 non-null   object\n",
      " 4   worldwide_gross    5782 non-null   object\n",
      "dtypes: object(5)\n",
      "memory usage: 271.0+ KB\n"
     ]
    }
   ],
   "source": [
    "movie_budget.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "36610a70-4c09-4f48-bd81-328774648a32",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn = sqlite3.connect('../zippedData/im.db')\n",
    "cur = conn.cursor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "afbf207c-4baa-4458-8769-501cae903f77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('movie_basics',),\n",
       " ('directors',),\n",
       " ('known_for',),\n",
       " ('movie_akas',),\n",
       " ('movie_ratings',),\n",
       " ('persons',),\n",
       " ('principals',),\n",
       " ('writers',)]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cur.execute(\"\"\"SELECT name FROM sqlite_master WHERE type = 'table';\"\"\")\n",
    "# Fetch the result and store it in table_names\n",
    "table_names = cur.fetchall()\n",
    "table_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "3f7deee6-3fbb-41dc-ac74-bd902d92f149",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>primary_name</th>\n",
       "      <th>genres</th>\n",
       "      <th>primary_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Brittania Nicol</td>\n",
       "      <td>Drama,Horror</td>\n",
       "      <td>The Wicker Tree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Biography,Drama,History</td>\n",
       "      <td>Testament of Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Drama,Thriller</td>\n",
       "      <td>Zero Dark Thirty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Drama,Romance</td>\n",
       "      <td>A Little Chaos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Graham McTavish</td>\n",
       "      <td>Adventure,Family,Fantasy</td>\n",
       "      <td>The Hobbit: An Unexpected Journey</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      primary_name                    genres  \\\n",
       "0  Brittania Nicol              Drama,Horror   \n",
       "1    Henry Garrett   Biography,Drama,History   \n",
       "2    Henry Garrett            Drama,Thriller   \n",
       "3    Henry Garrett             Drama,Romance   \n",
       "4  Graham McTavish  Adventure,Family,Fantasy   \n",
       "\n",
       "                       primary_title  \n",
       "0                    The Wicker Tree  \n",
       "1                 Testament of Youth  \n",
       "2                   Zero Dark Thirty  \n",
       "3                     A Little Chaos  \n",
       "4  The Hobbit: An Unexpected Journey  "
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn = sqlite3.connect('../zippedData/im.db')\n",
    "\n",
    "query= \"\"\"\n",
    "        SELECT per.primary_name, mov.genres, mov.primary_title\n",
    "        FROM persons AS per\n",
    "        JOIN known_for \n",
    "            USING(person_id)\n",
    "        JOIN movie_basics AS mov \n",
    "            USING(movie_id)\n",
    "        JOIN principals AS pri \n",
    "            USING(person_id)\n",
    "        WHERE pri.category in ('actor', 'actress');\n",
    "        \"\"\"\n",
    "\n",
    "df3 = pd.read_sql(query, conn)\n",
    "df3.head() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "cd730cca-357d-43fa-afef-2444c4863e39",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "object of type 'NoneType' has no len()",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[107], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mdf3\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgenres\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mvalue_counts()\n",
      "File \u001b[0;32m/opt/anaconda3/envs/my_py_3_8_5_env/lib/python3.8/site-packages/pandas/core/series.py:4630\u001b[0m, in \u001b[0;36mSeries.apply\u001b[0;34m(self, func, convert_dtype, args, **kwargs)\u001b[0m\n\u001b[1;32m   4520\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mapply\u001b[39m(\n\u001b[1;32m   4521\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   4522\u001b[0m     func: AggFuncType,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4525\u001b[0m     \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs,\n\u001b[1;32m   4526\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame \u001b[38;5;241m|\u001b[39m Series:\n\u001b[1;32m   4527\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   4528\u001b[0m \u001b[38;5;124;03m    Invoke function on values of Series.\u001b[39;00m\n\u001b[1;32m   4529\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4628\u001b[0m \u001b[38;5;124;03m    dtype: float64\u001b[39;00m\n\u001b[1;32m   4629\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4630\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mSeriesApply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconvert_dtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/anaconda3/envs/my_py_3_8_5_env/lib/python3.8/site-packages/pandas/core/apply.py:1025\u001b[0m, in \u001b[0;36mSeriesApply.apply\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1022\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mapply_str()\n\u001b[1;32m   1024\u001b[0m \u001b[38;5;66;03m# self.f is Callable\u001b[39;00m\n\u001b[0;32m-> 1025\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply_standard\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/anaconda3/envs/my_py_3_8_5_env/lib/python3.8/site-packages/pandas/core/apply.py:1076\u001b[0m, in \u001b[0;36mSeriesApply.apply_standard\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1074\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   1075\u001b[0m         values \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;28mobject\u001b[39m)\u001b[38;5;241m.\u001b[39m_values\n\u001b[0;32m-> 1076\u001b[0m         mapped \u001b[38;5;241m=\u001b[39m \u001b[43mlib\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmap_infer\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1077\u001b[0m \u001b[43m            \u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1078\u001b[0m \u001b[43m            \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1079\u001b[0m \u001b[43m            \u001b[49m\u001b[43mconvert\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconvert_dtype\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1080\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1082\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(mapped) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(mapped[\u001b[38;5;241m0\u001b[39m], ABCSeries):\n\u001b[1;32m   1083\u001b[0m     \u001b[38;5;66;03m# GH#43986 Need to do list(mapped) in order to get treated as nested\u001b[39;00m\n\u001b[1;32m   1084\u001b[0m     \u001b[38;5;66;03m#  See also GH#25959 regarding EA support\u001b[39;00m\n\u001b[1;32m   1085\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m obj\u001b[38;5;241m.\u001b[39m_constructor_expanddim(\u001b[38;5;28mlist\u001b[39m(mapped), index\u001b[38;5;241m=\u001b[39mobj\u001b[38;5;241m.\u001b[39mindex)\n",
      "File \u001b[0;32m/opt/anaconda3/envs/my_py_3_8_5_env/lib/python3.8/site-packages/pandas/_libs/lib.pyx:2834\u001b[0m, in \u001b[0;36mpandas._libs.lib.map_infer\u001b[0;34m()\u001b[0m\n",
      "Cell \u001b[0;32mIn[107], line 1\u001b[0m, in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df3\u001b[38;5;241m.\u001b[39mgenres\u001b[38;5;241m.\u001b[39mapply(\u001b[38;5;28;01mlambda\u001b[39;00m x: \u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m)\u001b[38;5;241m.\u001b[39mvalue_counts()\n",
      "\u001b[0;31mTypeError\u001b[0m: object of type 'NoneType' has no len()"
     ]
    }
   ],
   "source": [
    "df3.genres.apply(lambda x: len(x)).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d344cc51-6e5e-4284-a6d9-aff683aa1280",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>primary_name</th>\n",
       "      <th>genres</th>\n",
       "      <th>primary_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Brittania Nicol</td>\n",
       "      <td>Drama</td>\n",
       "      <td>The Wicker Tree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Brittania Nicol</td>\n",
       "      <td>Horror</td>\n",
       "      <td>The Wicker Tree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Biography</td>\n",
       "      <td>Testament of Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Drama</td>\n",
       "      <td>Testament of Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>History</td>\n",
       "      <td>Testament of Youth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Drama</td>\n",
       "      <td>Zero Dark Thirty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Thriller</td>\n",
       "      <td>Zero Dark Thirty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Drama</td>\n",
       "      <td>A Little Chaos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Henry Garrett</td>\n",
       "      <td>Romance</td>\n",
       "      <td>A Little Chaos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Graham McTavish</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>The Hobbit: An Unexpected Journey</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      primary_name     genres                      primary_title\n",
       "0  Brittania Nicol      Drama                    The Wicker Tree\n",
       "1  Brittania Nicol     Horror                    The Wicker Tree\n",
       "2    Henry Garrett  Biography                 Testament of Youth\n",
       "3    Henry Garrett      Drama                 Testament of Youth\n",
       "4    Henry Garrett    History                 Testament of Youth\n",
       "5    Henry Garrett      Drama                   Zero Dark Thirty\n",
       "6    Henry Garrett   Thriller                   Zero Dark Thirty\n",
       "7    Henry Garrett      Drama                     A Little Chaos\n",
       "8    Henry Garrett    Romance                     A Little Chaos\n",
       "9  Graham McTavish  Adventure  The Hobbit: An Unexpected Journey"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn = sqlite3.connect('../zippedData/im.db')\n",
    "\n",
    "query= \"\"\"\n",
    "        SELECT per.primary_name, mov.genres, mov.primary_title\n",
    "        FROM persons AS per\n",
    "        JOIN known_for \n",
    "            USING(person_id)\n",
    "        JOIN movie_basics AS mov \n",
    "            USING(movie_id)\n",
    "        JOIN principals AS pri \n",
    "            USING(person_id)\n",
    "        WHERE pri.category in ('actor', 'actress');\n",
    "        \"\"\"\n",
    "\n",
    "df = pd.read_sql(query, conn)\n",
    "\n",
    "# Step 2: Split the movie_genre column by commas and expand it into individual rows\n",
    "df['genres'] = df['genres'].str.split(',')  # Split by comma into lists\n",
    "df = df.explode('genres', ignore_index=True)  # Expand the lists into separate rows\n",
    "\n",
    "df.head(10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "61d40717-6525-4dca-9d17-1aa8f8ce5ce1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>genres</th>\n",
       "      <th>primary_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Action</td>\n",
       "      <td>Sunghursh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Crime</td>\n",
       "      <td>Sunghursh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Drama</td>\n",
       "      <td>Sunghursh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Biography</td>\n",
       "      <td>One Day Before the Rainy Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Drama</td>\n",
       "      <td>One Day Before the Rainy Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Drama</td>\n",
       "      <td>The Other Side of the Wind</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Comedy</td>\n",
       "      <td>Sabse Bada Sukh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Drama</td>\n",
       "      <td>Sabse Bada Sukh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Comedy</td>\n",
       "      <td>The Wandering Soap Opera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Drama</td>\n",
       "      <td>The Wandering Soap Opera</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      genres                    primary_title\n",
       "0     Action                        Sunghursh\n",
       "1      Crime                        Sunghursh\n",
       "2      Drama                        Sunghursh\n",
       "3  Biography  One Day Before the Rainy Season\n",
       "4      Drama  One Day Before the Rainy Season\n",
       "5      Drama       The Other Side of the Wind\n",
       "6     Comedy                  Sabse Bada Sukh\n",
       "7      Drama                  Sabse Bada Sukh\n",
       "8     Comedy         The Wandering Soap Opera\n",
       "9      Drama         The Wandering Soap Opera"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conn = sqlite3.connect('../zippedData/im.db')\n",
    "\n",
    "query= \"\"\"\n",
    "        SELECT mov.genres, mov.primary_title\n",
    "        FROM movie_basics AS mov;\n",
    "        \"\"\"\n",
    "\n",
    "df = pd.read_sql(query, conn)\n",
    "\n",
    "# Step 2: Split the movie_genre column by commas and expand it into individual rows\n",
    "df['genres'] = df['genres'].str.split(',')  # Split by comma into lists\n",
    "df = df.explode('genres', ignore_index=True)  # Expand the lists into separate rows\n",
    "\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4c6b3724-0321-42c6-9162-02124b507945",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "234958"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genres= df\n",
    "len(movie_genres)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "37054f7d-134f-43f2-8e20-ab1003c56b27",
   "metadata": {},
   "outputs": [],
   "source": [
    "movie_genres.rename(columns={'primary_title': 'movie'}, inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b03e4449-9211-4cc9-9df8-5d60a841be36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>$410,600,000</td>\n",
       "      <td>$241,063,875</td>\n",
       "      <td>$1,045,663,875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>$350,000,000</td>\n",
       "      <td>$42,762,350</td>\n",
       "      <td>$149,762,350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>$330,600,000</td>\n",
       "      <td>$459,005,868</td>\n",
       "      <td>$1,403,013,963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>$317,000,000</td>\n",
       "      <td>$620,181,382</td>\n",
       "      <td>$1,316,721,747</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie  \\\n",
       "id                                                              \n",
       "1   Dec 18, 2009                                       Avatar   \n",
       "2   May 20, 2011  Pirates of the Caribbean: On Stranger Tides   \n",
       "3    Jun 7, 2019                                 Dark Phoenix   \n",
       "4    May 1, 2015                      Avengers: Age of Ultron   \n",
       "5   Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi   \n",
       "\n",
       "   production_budget domestic_gross worldwide_gross  \n",
       "id                                                   \n",
       "1       $425,000,000   $760,507,625  $2,776,345,279  \n",
       "2       $410,600,000   $241,063,875  $1,045,663,875  \n",
       "3       $350,000,000    $42,762,350    $149,762,350  \n",
       "4       $330,600,000   $459,005,868  $1,403,013,963  \n",
       "5       $317,000,000   $620,181,382  $1,316,721,747  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#preview the movie budget dataset\n",
    "movie_budget = pd.read_csv('../zippedData/tn.movie_budgets.csv', index_col= 0)\n",
    "movie_budget.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d51c705c-a71f-4fe4-92e8-004267dbe8db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5782"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movie_budget)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "184066fe-9624-4458-914f-e50d34aeb65f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>$410,600,000</td>\n",
       "      <td>$241,063,875</td>\n",
       "      <td>$1,045,663,875</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>$410,600,000</td>\n",
       "      <td>$241,063,875</td>\n",
       "      <td>$1,045,663,875</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>$410,600,000</td>\n",
       "      <td>$241,063,875</td>\n",
       "      <td>$1,045,663,875</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>$350,000,000</td>\n",
       "      <td>$42,762,350</td>\n",
       "      <td>$149,762,350</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date                                        movie  \\\n",
       "0  Dec 18, 2009                                       Avatar   \n",
       "1  May 20, 2011  Pirates of the Caribbean: On Stranger Tides   \n",
       "2  May 20, 2011  Pirates of the Caribbean: On Stranger Tides   \n",
       "3  May 20, 2011  Pirates of the Caribbean: On Stranger Tides   \n",
       "4   Jun 7, 2019                                 Dark Phoenix   \n",
       "\n",
       "  production_budget domestic_gross worldwide_gross     genres  \n",
       "0      $425,000,000   $760,507,625  $2,776,345,279     Horror  \n",
       "1      $410,600,000   $241,063,875  $1,045,663,875     Action  \n",
       "2      $410,600,000   $241,063,875  $1,045,663,875  Adventure  \n",
       "3      $410,600,000   $241,063,875  $1,045,663,875    Fantasy  \n",
       "4      $350,000,000    $42,762,350    $149,762,350     Action  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df =movie_budget.merge(movie_genres, how='outer', on=['movie'])\n",
    "\n",
    "\n",
    "movies_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a6d295b2-05fe-4f94-92bb-70a72844cbb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "238759"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movies_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b78e5de3-b633-49f6-b61a-07ea24fd770f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238754</th>\n",
       "      <td>Kuambil Lagi Hatiku</td>\n",
       "      <td>Drama</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238755</th>\n",
       "      <td>Rodolpho Teóphilo - O Legado de um Pioneiro</td>\n",
       "      <td>Documentary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238756</th>\n",
       "      <td>Dankyavar Danka</td>\n",
       "      <td>Comedy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238757</th>\n",
       "      <td>6 Gunn</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238758</th>\n",
       "      <td>Chico Albuquerque - Revelações</td>\n",
       "      <td>Documentary</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>238759 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                              movie       genres\n",
       "0                                            Avatar       Horror\n",
       "1       Pirates of the Caribbean: On Stranger Tides       Action\n",
       "2       Pirates of the Caribbean: On Stranger Tides    Adventure\n",
       "3       Pirates of the Caribbean: On Stranger Tides      Fantasy\n",
       "4                                      Dark Phoenix       Action\n",
       "...                                             ...          ...\n",
       "238754                          Kuambil Lagi Hatiku        Drama\n",
       "238755  Rodolpho Teóphilo - O Legado de um Pioneiro  Documentary\n",
       "238756                              Dankyavar Danka       Comedy\n",
       "238757                                       6 Gunn         None\n",
       "238758               Chico Albuquerque - Revelações  Documentary\n",
       "\n",
       "[238759 rows x 2 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df[['movie','genres']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b1a22a9b-7dfa-458e-b038-5bcfc1352fee",
   "metadata": {},
   "outputs": [],
   "source": [
    "movie_genre_df3= pd.concat([movies_df[['movie','genres']], movie_genre_df2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5dfd0752-cec0-48d9-84b1-7a32bca408fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "      <th>genres_x</th>\n",
       "      <th>genres_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "      <td>Science Fiction</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie production_budget domestic_gross worldwide_gross  \\\n",
       "0  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "1  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "2  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "3  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "4  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "\n",
       "  genres_x         genres_y  \n",
       "0   Horror           Horror  \n",
       "1   Horror           Action  \n",
       "2   Horror        Adventure  \n",
       "3   Horror          Fantasy  \n",
       "4   Horror  Science Fiction  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2 =movies_df.merge(movie_genre_df3, how='left', on=['movie'])\n",
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "2f48ba1a-4c40-4b7c-abd6-04265b2f0d9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "696900"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movies_df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "7d4a823b-5bef-4ddb-a9ff-50c414be26bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "      <th>genres_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Science Fiction</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie production_budget domestic_gross worldwide_gross  \\\n",
       "0  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "1  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "2  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "3  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "4  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "\n",
       "          genres_y  \n",
       "0           Horror  \n",
       "1           Action  \n",
       "2        Adventure  \n",
       "3          Fantasy  \n",
       "4  Science Fiction  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2= movies_df2.drop(columns=['genres_x'])\n",
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ae68a9d0-b50d-48a1-b70f-826766ce0a32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "241993"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2.drop_duplicates(keep='first', inplace=True)\n",
    "len(movies_df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7f3a3e90-f6b3-464c-9439-88dd32741fd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>worldwide_gross</th>\n",
       "      <th>genres_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>$2,776,345,279</td>\n",
       "      <td>Science Fiction</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie production_budget domestic_gross worldwide_gross  \\\n",
       "0  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "1  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "2  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "3  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "4  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  $2,776,345,279   \n",
       "\n",
       "          genres_y  \n",
       "0           Horror  \n",
       "1           Action  \n",
       "2        Adventure  \n",
       "3          Fantasy  \n",
       "4  Science Fiction  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2[movies_df2['movie']=='Avatar']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0dfa0a3a-f70d-4094-b8fe-b091aab7b481",
   "metadata": {},
   "outputs": [],
   "source": [
    "movies_df2.rename(columns={'genres_y': 'genres'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "09d05af0-0732-4d96-8197-a7ef764356f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "movies_df2.drop(columns=['worldwide_gross'], inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "88744d84-b346-4546-b0e0-ade419fd29f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>$425,000,000</td>\n",
       "      <td>$760,507,625</td>\n",
       "      <td>Science Fiction</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie production_budget domestic_gross           genres\n",
       "0  Dec 18, 2009  Avatar      $425,000,000   $760,507,625           Horror\n",
       "1  Dec 18, 2009  Avatar      $425,000,000   $760,507,625           Action\n",
       "2  Dec 18, 2009  Avatar      $425,000,000   $760,507,625        Adventure\n",
       "3  Dec 18, 2009  Avatar      $425,000,000   $760,507,625          Fantasy\n",
       "4  Dec 18, 2009  Avatar      $425,000,000   $760,507,625  Science Fiction"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "f22c54d0-daba-40cb-b906-76694e0e2c30",
   "metadata": {},
   "outputs": [],
   "source": [
    "movies_df2.dropna(subset=['production_budget', 'domestic_gross'], inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "b3af7ce7-81d2-4c80-b960-3be96fcc0c22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Horror</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Science Fiction</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie  production_budget  domestic_gross           genres\n",
       "0  Dec 18, 2009  Avatar          425000000       760507625           Horror\n",
       "1  Dec 18, 2009  Avatar          425000000       760507625           Action\n",
       "2  Dec 18, 2009  Avatar          425000000       760507625        Adventure\n",
       "3  Dec 18, 2009  Avatar          425000000       760507625          Fantasy\n",
       "4  Dec 18, 2009  Avatar          425000000       760507625  Science Fiction"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=['production_budget','domestic_gross']\n",
    "\n",
    "for col in x:\n",
    "    movies_df2[col] = movies_df2[col].replace({'\\$': '', ',': ''}, regex=True).astype(int)\n",
    "\n",
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "d31cbcfd-08c9-48ca-8566-2bec16616556",
   "metadata": {},
   "outputs": [],
   "source": [
    "movies_df2['ROI']=movies_df2['domestic_gross']-movies_df2['production_budget']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "951b33ea-80c2-4527-8df7-45a7c81b42cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie  production_budget  domestic_gross           genres  \\\n",
       "0  Dec 18, 2009  Avatar          425000000       760507625           Horror   \n",
       "1  Dec 18, 2009  Avatar          425000000       760507625           Action   \n",
       "2  Dec 18, 2009  Avatar          425000000       760507625        Adventure   \n",
       "3  Dec 18, 2009  Avatar          425000000       760507625          Fantasy   \n",
       "4  Dec 18, 2009  Avatar          425000000       760507625  Science Fiction   \n",
       "\n",
       "         ROI  \n",
       "0  335507625  \n",
       "1  335507625  \n",
       "2  335507625  \n",
       "3  335507625  \n",
       "4  335507625  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "3896f7e8-b2bc-477f-9de3-94eccef444a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    1.180500e+04\n",
       "mean     1.033630e+07\n",
       "std      5.558002e+07\n",
       "min     -3.072376e+08\n",
       "25%     -1.068575e+07\n",
       "50%     -7.306330e+05\n",
       "75%      1.803572e+07\n",
       "max      6.306622e+08\n",
       "Name: ROI, dtype: float64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2['ROI'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "d2aed318-5964-4482-af7a-4c576c743b2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie  production_budget        ROI\n",
       "0  Avatar          425000000  335507625\n",
       "1  Avatar          425000000  335507625\n",
       "2  Avatar          425000000  335507625\n",
       "3  Avatar          425000000  335507625\n",
       "4  Avatar          425000000  335507625"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis=movies_df2[['movie','production_budget','ROI']]\n",
    "budget_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "70622a88-f327-4e3d-b9b2-15695f381de2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11805"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(budget_analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "17ed067e-0dcc-48a4-9029-3791b54f6467",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5698"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis = budget_analysis.drop_duplicates(subset=['movie'], keep='first')\n",
    "len(budget_analysis)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "14f1b6fb-9fe0-4f60-a895-ff2cf89e411b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>410600000</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>350000000</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>330600000</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>317000000</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          movie  production_budget        ROI\n",
       "0                                        Avatar          425000000  335507625\n",
       "5   Pirates of the Caribbean: On Stranger Tides          410600000 -169536125\n",
       "23                                 Dark Phoenix          350000000 -307237650\n",
       "32                      Avengers: Age of Ultron          330600000  128405868\n",
       "50            Star Wars Ep. VIII: The Last Jedi          317000000  303181382"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "9837e945-7302-41c0-a7b9-b7f11ddf2b75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie           genres        ROI\n",
       "0  Avatar           Horror  335507625\n",
       "1  Avatar           Action  335507625\n",
       "2  Avatar        Adventure  335507625\n",
       "3  Avatar          Fantasy  335507625\n",
       "4  Avatar  Science Fiction  335507625"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis=movies_df2[['movie','genres','ROI']]\n",
    "movie_genre_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "ff20d504-2f42-4cae-aeee-c3e698700abe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11805"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movie_genre_analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "5fb1d935-e691-49c1-bac4-8cd2be8e1728",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>genres</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Action</th>\n",
       "      <td>736.0</td>\n",
       "      <td>6.833459e+06</td>\n",
       "      <td>7.263229e+07</td>\n",
       "      <td>-307237650.0</td>\n",
       "      <td>-20047480.50</td>\n",
       "      <td>-3500000.0</td>\n",
       "      <td>17921235.25</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adventure</th>\n",
       "      <td>530.0</td>\n",
       "      <td>1.422713e+07</td>\n",
       "      <td>8.974524e+07</td>\n",
       "      <td>-307237650.0</td>\n",
       "      <td>-24196597.50</td>\n",
       "      <td>-2000000.0</td>\n",
       "      <td>29501652.00</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation</th>\n",
       "      <td>168.0</td>\n",
       "      <td>3.670118e+07</td>\n",
       "      <td>1.000852e+08</td>\n",
       "      <td>-128607242.0</td>\n",
       "      <td>-15176274.75</td>\n",
       "      <td>2343960.0</td>\n",
       "      <td>52356944.50</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Biography</th>\n",
       "      <td>235.0</td>\n",
       "      <td>8.309352e+06</td>\n",
       "      <td>3.916829e+07</td>\n",
       "      <td>-74979242.0</td>\n",
       "      <td>-10863950.00</td>\n",
       "      <td>-800000.0</td>\n",
       "      <td>17835934.00</td>\n",
       "      <td>292126372.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy</th>\n",
       "      <td>849.0</td>\n",
       "      <td>1.496960e+07</td>\n",
       "      <td>5.042141e+07</td>\n",
       "      <td>-114911680.0</td>\n",
       "      <td>-6617054.00</td>\n",
       "      <td>-60000.0</td>\n",
       "      <td>23059911.00</td>\n",
       "      <td>314508916.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crime</th>\n",
       "      <td>429.0</td>\n",
       "      <td>4.684635e+06</td>\n",
       "      <td>4.042812e+07</td>\n",
       "      <td>-99925825.0</td>\n",
       "      <td>-12343312.00</td>\n",
       "      <td>-2549154.0</td>\n",
       "      <td>11397291.00</td>\n",
       "      <td>348720947.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Documentary</th>\n",
       "      <td>362.0</td>\n",
       "      <td>4.804843e+06</td>\n",
       "      <td>3.822121e+07</td>\n",
       "      <td>-106135493.0</td>\n",
       "      <td>-8158782.50</td>\n",
       "      <td>-975000.0</td>\n",
       "      <td>8268944.00</td>\n",
       "      <td>262563408.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Documetary</th>\n",
       "      <td>87.0</td>\n",
       "      <td>2.072152e+06</td>\n",
       "      <td>2.501994e+07</td>\n",
       "      <td>-60577681.0</td>\n",
       "      <td>-6362207.50</td>\n",
       "      <td>-540889.0</td>\n",
       "      <td>896414.50</td>\n",
       "      <td>102280354.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drama</th>\n",
       "      <td>1436.0</td>\n",
       "      <td>7.145398e+06</td>\n",
       "      <td>4.202843e+07</td>\n",
       "      <td>-136637525.0</td>\n",
       "      <td>-9926644.50</td>\n",
       "      <td>-992964.0</td>\n",
       "      <td>13990796.75</td>\n",
       "      <td>356057266.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <td>309.0</td>\n",
       "      <td>2.307126e+07</td>\n",
       "      <td>7.998646e+07</td>\n",
       "      <td>-129812397.0</td>\n",
       "      <td>-11410555.00</td>\n",
       "      <td>303792.0</td>\n",
       "      <td>35286779.00</td>\n",
       "      <td>459363944.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fantasy</th>\n",
       "      <td>278.0</td>\n",
       "      <td>1.343444e+07</td>\n",
       "      <td>8.645036e+07</td>\n",
       "      <td>-169536125.0</td>\n",
       "      <td>-23714011.50</td>\n",
       "      <td>-1801395.0</td>\n",
       "      <td>30550993.25</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>History</th>\n",
       "      <td>135.0</td>\n",
       "      <td>-7.656518e+05</td>\n",
       "      <td>3.841009e+07</td>\n",
       "      <td>-104512852.0</td>\n",
       "      <td>-15351205.00</td>\n",
       "      <td>-6330919.0</td>\n",
       "      <td>9886679.50</td>\n",
       "      <td>181461711.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Horror</th>\n",
       "      <td>434.0</td>\n",
       "      <td>8.589921e+06</td>\n",
       "      <td>3.819259e+07</td>\n",
       "      <td>-114898875.0</td>\n",
       "      <td>-4990838.00</td>\n",
       "      <td>-500000.0</td>\n",
       "      <td>16644693.25</td>\n",
       "      <td>335507625.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Music</th>\n",
       "      <td>109.0</td>\n",
       "      <td>1.345080e+07</td>\n",
       "      <td>4.158968e+07</td>\n",
       "      <td>-89804541.0</td>\n",
       "      <td>-5068194.00</td>\n",
       "      <td>-77698.0</td>\n",
       "      <td>16995263.00</td>\n",
       "      <td>179288866.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Musical</th>\n",
       "      <td>31.0</td>\n",
       "      <td>3.938993e+07</td>\n",
       "      <td>9.404676e+07</td>\n",
       "      <td>-47051235.0</td>\n",
       "      <td>-4702514.50</td>\n",
       "      <td>-500000.0</td>\n",
       "      <td>63401186.00</td>\n",
       "      <td>356057266.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mystery</th>\n",
       "      <td>314.0</td>\n",
       "      <td>7.384437e+06</td>\n",
       "      <td>3.586503e+07</td>\n",
       "      <td>-92945841.0</td>\n",
       "      <td>-9783199.00</td>\n",
       "      <td>-950000.0</td>\n",
       "      <td>20092767.75</td>\n",
       "      <td>195631306.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>News</th>\n",
       "      <td>7.0</td>\n",
       "      <td>-1.864393e+07</td>\n",
       "      <td>2.911085e+07</td>\n",
       "      <td>-84181087.0</td>\n",
       "      <td>-12204441.00</td>\n",
       "      <td>-7402102.0</td>\n",
       "      <td>-5776297.00</td>\n",
       "      <td>-2962849.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Reality-TV</th>\n",
       "      <td>1.0</td>\n",
       "      <td>-1.000000e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1000000.0</td>\n",
       "      <td>-1000000.00</td>\n",
       "      <td>-1000000.0</td>\n",
       "      <td>-1000000.00</td>\n",
       "      <td>-1000000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Romance</th>\n",
       "      <td>410.0</td>\n",
       "      <td>9.438491e+06</td>\n",
       "      <td>4.416543e+07</td>\n",
       "      <td>-84181087.0</td>\n",
       "      <td>-7883375.50</td>\n",
       "      <td>-440669.0</td>\n",
       "      <td>14511370.75</td>\n",
       "      <td>356057266.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sci-Fi</th>\n",
       "      <td>223.0</td>\n",
       "      <td>1.913102e+07</td>\n",
       "      <td>9.221733e+07</td>\n",
       "      <td>-307237650.0</td>\n",
       "      <td>-15326889.50</td>\n",
       "      <td>-1500000.0</td>\n",
       "      <td>18920187.00</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Science Fiction</th>\n",
       "      <td>246.0</td>\n",
       "      <td>1.695967e+07</td>\n",
       "      <td>8.615405e+07</td>\n",
       "      <td>-201941321.0</td>\n",
       "      <td>-19742941.75</td>\n",
       "      <td>-581764.0</td>\n",
       "      <td>24399691.00</td>\n",
       "      <td>500059566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sport</th>\n",
       "      <td>71.0</td>\n",
       "      <td>9.652116e+06</td>\n",
       "      <td>5.218415e+07</td>\n",
       "      <td>-71217519.0</td>\n",
       "      <td>-11129489.50</td>\n",
       "      <td>-468168.0</td>\n",
       "      <td>12049997.50</td>\n",
       "      <td>262563408.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TV Movie</th>\n",
       "      <td>10.0</td>\n",
       "      <td>3.398330e+06</td>\n",
       "      <td>3.713164e+07</td>\n",
       "      <td>-51919916.0</td>\n",
       "      <td>-13179823.25</td>\n",
       "      <td>-2125000.0</td>\n",
       "      <td>7025000.00</td>\n",
       "      <td>84222438.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thriller</th>\n",
       "      <td>764.0</td>\n",
       "      <td>5.314386e+06</td>\n",
       "      <td>4.431876e+07</td>\n",
       "      <td>-154766600.0</td>\n",
       "      <td>-12088315.25</td>\n",
       "      <td>-1402500.0</td>\n",
       "      <td>14038458.75</td>\n",
       "      <td>437270625.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>War</th>\n",
       "      <td>86.0</td>\n",
       "      <td>6.212424e+06</td>\n",
       "      <td>4.972881e+07</td>\n",
       "      <td>-65901936.0</td>\n",
       "      <td>-11981724.50</td>\n",
       "      <td>-3170500.5</td>\n",
       "      <td>10585624.50</td>\n",
       "      <td>292126372.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Western</th>\n",
       "      <td>36.0</td>\n",
       "      <td>-5.979256e+06</td>\n",
       "      <td>4.582488e+07</td>\n",
       "      <td>-185697885.0</td>\n",
       "      <td>-19240828.50</td>\n",
       "      <td>-3640721.0</td>\n",
       "      <td>3746587.25</td>\n",
       "      <td>136243005.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  count          mean           std          min          25%  \\\n",
       "genres                                                                          \n",
       "Action            736.0  6.833459e+06  7.263229e+07 -307237650.0 -20047480.50   \n",
       "Adventure         530.0  1.422713e+07  8.974524e+07 -307237650.0 -24196597.50   \n",
       "Animation         168.0  3.670118e+07  1.000852e+08 -128607242.0 -15176274.75   \n",
       "Biography         235.0  8.309352e+06  3.916829e+07  -74979242.0 -10863950.00   \n",
       "Comedy            849.0  1.496960e+07  5.042141e+07 -114911680.0  -6617054.00   \n",
       "Crime             429.0  4.684635e+06  4.042812e+07  -99925825.0 -12343312.00   \n",
       "Documentary       362.0  4.804843e+06  3.822121e+07 -106135493.0  -8158782.50   \n",
       "Documetary         87.0  2.072152e+06  2.501994e+07  -60577681.0  -6362207.50   \n",
       "Drama            1436.0  7.145398e+06  4.202843e+07 -136637525.0  -9926644.50   \n",
       "Family            309.0  2.307126e+07  7.998646e+07 -129812397.0 -11410555.00   \n",
       "Fantasy           278.0  1.343444e+07  8.645036e+07 -169536125.0 -23714011.50   \n",
       "History           135.0 -7.656518e+05  3.841009e+07 -104512852.0 -15351205.00   \n",
       "Horror            434.0  8.589921e+06  3.819259e+07 -114898875.0  -4990838.00   \n",
       "Music             109.0  1.345080e+07  4.158968e+07  -89804541.0  -5068194.00   \n",
       "Musical            31.0  3.938993e+07  9.404676e+07  -47051235.0  -4702514.50   \n",
       "Mystery           314.0  7.384437e+06  3.586503e+07  -92945841.0  -9783199.00   \n",
       "News                7.0 -1.864393e+07  2.911085e+07  -84181087.0 -12204441.00   \n",
       "Reality-TV          1.0 -1.000000e+06           NaN   -1000000.0  -1000000.00   \n",
       "Romance           410.0  9.438491e+06  4.416543e+07  -84181087.0  -7883375.50   \n",
       "Sci-Fi            223.0  1.913102e+07  9.221733e+07 -307237650.0 -15326889.50   \n",
       "Science Fiction   246.0  1.695967e+07  8.615405e+07 -201941321.0 -19742941.75   \n",
       "Sport              71.0  9.652116e+06  5.218415e+07  -71217519.0 -11129489.50   \n",
       "TV Movie           10.0  3.398330e+06  3.713164e+07  -51919916.0 -13179823.25   \n",
       "Thriller          764.0  5.314386e+06  4.431876e+07 -154766600.0 -12088315.25   \n",
       "War                86.0  6.212424e+06  4.972881e+07  -65901936.0 -11981724.50   \n",
       "Western            36.0 -5.979256e+06  4.582488e+07 -185697885.0 -19240828.50   \n",
       "\n",
       "                       50%          75%          max  \n",
       "genres                                                \n",
       "Action          -3500000.0  17921235.25  500059566.0  \n",
       "Adventure       -2000000.0  29501652.00  500059566.0  \n",
       "Animation        2343960.0  52356944.50  500059566.0  \n",
       "Biography        -800000.0  17835934.00  292126372.0  \n",
       "Comedy            -60000.0  23059911.00  314508916.0  \n",
       "Crime           -2549154.0  11397291.00  348720947.0  \n",
       "Documentary      -975000.0   8268944.00  262563408.0  \n",
       "Documetary       -540889.0    896414.50  102280354.0  \n",
       "Drama            -992964.0  13990796.75  356057266.0  \n",
       "Family            303792.0  35286779.00  459363944.0  \n",
       "Fantasy         -1801395.0  30550993.25  500059566.0  \n",
       "History         -6330919.0   9886679.50  181461711.0  \n",
       "Horror           -500000.0  16644693.25  335507625.0  \n",
       "Music             -77698.0  16995263.00  179288866.0  \n",
       "Musical          -500000.0  63401186.00  356057266.0  \n",
       "Mystery          -950000.0  20092767.75  195631306.0  \n",
       "News            -7402102.0  -5776297.00   -2962849.0  \n",
       "Reality-TV      -1000000.0  -1000000.00   -1000000.0  \n",
       "Romance          -440669.0  14511370.75  356057266.0  \n",
       "Sci-Fi          -1500000.0  18920187.00  500059566.0  \n",
       "Science Fiction  -581764.0  24399691.00  500059566.0  \n",
       "Sport            -468168.0  12049997.50  262563408.0  \n",
       "TV Movie        -2125000.0   7025000.00   84222438.0  \n",
       "Thriller        -1402500.0  14038458.75  437270625.0  \n",
       "War             -3170500.5  10585624.50  292126372.0  \n",
       "Western         -3640721.0   3746587.25  136243005.0  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis.groupby('genres')['ROI'].describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "9d53b8f6-d508-410d-ac20-79283bf98da8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>domestic_gross</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>760507625</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie  production_budget  domestic_gross           genres  \\\n",
       "0  Dec 18, 2009  Avatar          425000000       760507625           Horror   \n",
       "1  Dec 18, 2009  Avatar          425000000       760507625           Action   \n",
       "2  Dec 18, 2009  Avatar          425000000       760507625        Adventure   \n",
       "3  Dec 18, 2009  Avatar          425000000       760507625          Fantasy   \n",
       "4  Dec 18, 2009  Avatar          425000000       760507625  Science Fiction   \n",
       "\n",
       "         ROI  \n",
       "0  335507625  \n",
       "1  335507625  \n",
       "2  335507625  \n",
       "3  335507625  \n",
       "4  335507625  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d41bad0a-fd0a-40a9-bab9-f5ca80b565ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   release_date   movie        ROI\n",
       "0  Dec 18, 2009  Avatar  335507625\n",
       "1  Dec 18, 2009  Avatar  335507625\n",
       "2  Dec 18, 2009  Avatar  335507625\n",
       "3  Dec 18, 2009  Avatar  335507625\n",
       "4  Dec 18, 2009  Avatar  335507625"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis=movies_df2[['release_date','movie','ROI']]\n",
    "release_date_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "26d033e8-77a9-474a-8e90-ebb9976f9042",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11805"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(release_date_analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "b287f801-bebe-4b7e-8cb6-a82b09f69a39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie        ROI\n",
       "0   Dec 18, 2009                                       Avatar  335507625\n",
       "5   May 20, 2011  Pirates of the Caribbean: On Stranger Tides -169536125\n",
       "23   Jun 7, 2019                                 Dark Phoenix -307237650\n",
       "32   May 1, 2015                      Avengers: Age of Ultron  128405868\n",
       "50  Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi  303181382"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis_v1=release_date_analysis.drop_duplicates(keep='first')\n",
    "release_date_analysis_v1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "e702aafc-8129-4823-acf1-8e3f16cbec87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5782"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(release_date_analysis_v1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f3ac084-e10d-4896-ba46-1d9deaf9ec58",
   "metadata": {},
   "source": [
    "## Datasets shown here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "987321f2-1728-4f66-b111-765ee63de6f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie        ROI\n",
       "0   Dec 18, 2009                                       Avatar  335507625\n",
       "5   May 20, 2011  Pirates of the Caribbean: On Stranger Tides -169536125\n",
       "23   Jun 7, 2019                                 Dark Phoenix -307237650\n",
       "32   May 1, 2015                      Avengers: Age of Ultron  128405868\n",
       "50  Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi  303181382"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis_v1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "43dc929e-31b3-454c-86e4-100ff1d06512",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie           genres        ROI\n",
       "0  Avatar           Horror  335507625\n",
       "1  Avatar           Action  335507625\n",
       "2  Avatar        Adventure  335507625\n",
       "3  Avatar          Fantasy  335507625\n",
       "4  Avatar  Science Fiction  335507625"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f0c65f25-b960-4a17-8181-006ffa63a55c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>410600000</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>350000000</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>330600000</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>317000000</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          movie  production_budget        ROI\n",
       "0                                        Avatar          425000000  335507625\n",
       "5   Pirates of the Caribbean: On Stranger Tides          410600000 -169536125\n",
       "23                                 Dark Phoenix          350000000 -307237650\n",
       "32                      Avengers: Age of Ultron          330600000  128405868\n",
       "50            Star Wars Ep. VIII: The Last Jedi          317000000  303181382"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9051d53a-f7d3-43b5-b2c3-0184bfcc515b",
   "metadata": {},
   "source": [
    "## workd on finalizing release date data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "ef14f448-c661-49e6-a1c0-1319c871633b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie        ROI\n",
       "0   Dec 18, 2009                                       Avatar  335507625\n",
       "5   May 20, 2011  Pirates of the Caribbean: On Stranger Tides -169536125\n",
       "23   Jun 7, 2019                                 Dark Phoenix -307237650\n",
       "32   May 1, 2015                      Avengers: Age of Ultron  128405868\n",
       "50  Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi  303181382"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis_v1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "79cff131-03de-49f6-bb06-7820e91a3252",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/p_/7g5qyc8d5zv5nfywm65yhpkc0000gn/T/ipykernel_98186/99973177.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  release_date_analysis_v1['Release_Month']= release_date_analysis_v1['release_date'].str[:3]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "      <th>Release_Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>-169536125</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>-307237650</td>\n",
       "      <td>Jun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>128405868</td>\n",
       "      <td>May</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>303181382</td>\n",
       "      <td>Dec</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie        ROI  \\\n",
       "0   Dec 18, 2009                                       Avatar  335507625   \n",
       "5   May 20, 2011  Pirates of the Caribbean: On Stranger Tides -169536125   \n",
       "23   Jun 7, 2019                                 Dark Phoenix -307237650   \n",
       "32   May 1, 2015                      Avengers: Age of Ultron  128405868   \n",
       "50  Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi  303181382   \n",
       "\n",
       "   Release_Month  \n",
       "0            Dec  \n",
       "5            May  \n",
       "23           Jun  \n",
       "32           May  \n",
       "50           Dec  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis_v1['Release_Month']= release_date_analysis_v1['release_date'].str[:3]\n",
    "release_date_analysis_v1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "07107cd7-bfbb-48ce-95d0-cd82ec055736",
   "metadata": {},
   "outputs": [],
   "source": [
    "def month_to_season(month):\n",
    "    season_dict= { 'Mar': 'Spring', 'Apr': 'Spring', 'May': 'Spring',\n",
    "                  'Jun': 'Summer', 'Jul': 'Summer', 'Aug': 'Summer',\n",
    "                  'Sep': 'Fall', 'Oct': 'Fall', 'Nov': 'Fall',\n",
    "                  'Dec': 'Winter', 'Jan': 'Winter', 'Feb': 'Winter'}\n",
    "    return season_dict.get(month)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "84a6617e-28cc-499f-9006-6e3369e01216",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/p_/7g5qyc8d5zv5nfywm65yhpkc0000gn/T/ipykernel_98186/1832510162.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  release_date_analysis_v1['Season']= release_date_analysis_v1['Release_Month'].apply( lambda x : month_to_season(x))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>release_date</th>\n",
       "      <th>movie</th>\n",
       "      <th>ROI</th>\n",
       "      <th>Release_Month</th>\n",
       "      <th>Season</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dec 18, 2009</td>\n",
       "      <td>Avatar</td>\n",
       "      <td>335507625</td>\n",
       "      <td>Dec</td>\n",
       "      <td>Winter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>May 20, 2011</td>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>-169536125</td>\n",
       "      <td>May</td>\n",
       "      <td>Spring</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Jun 7, 2019</td>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>-307237650</td>\n",
       "      <td>Jun</td>\n",
       "      <td>Summer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>May 1, 2015</td>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>128405868</td>\n",
       "      <td>May</td>\n",
       "      <td>Spring</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Dec 15, 2017</td>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>303181382</td>\n",
       "      <td>Dec</td>\n",
       "      <td>Winter</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    release_date                                        movie        ROI  \\\n",
       "0   Dec 18, 2009                                       Avatar  335507625   \n",
       "5   May 20, 2011  Pirates of the Caribbean: On Stranger Tides -169536125   \n",
       "23   Jun 7, 2019                                 Dark Phoenix -307237650   \n",
       "32   May 1, 2015                      Avengers: Age of Ultron  128405868   \n",
       "50  Dec 15, 2017            Star Wars Ep. VIII: The Last Jedi  303181382   \n",
       "\n",
       "   Release_Month  Season  \n",
       "0            Dec  Winter  \n",
       "5            May  Spring  \n",
       "23           Jun  Summer  \n",
       "32           May  Spring  \n",
       "50           Dec  Winter  "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "release_date_analysis_v1['Season']= release_date_analysis_v1['Release_Month'].apply( lambda x : month_to_season(x))\n",
    "release_date_analysis_v1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "31abda61-4c1b-4ea6-bfaa-e04faf74687c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Winter</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Spring</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Summer</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Spring</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Winter</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Season        ROI\n",
       "0   Winter  335507625\n",
       "5   Spring -169536125\n",
       "23  Summer -307237650\n",
       "32  Spring  128405868\n",
       "50  Winter  303181382"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Seasonal_ROI = release_date_analysis_v1[['Season','ROI']]\n",
    "Seasonal_ROI.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "a5fb3494-d98a-4499-877a-9ddccbce7a69",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Season</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fall</th>\n",
       "      <td>1552.0</td>\n",
       "      <td>6.792027e+06</td>\n",
       "      <td>4.101982e+07</td>\n",
       "      <td>-120702809.0</td>\n",
       "      <td>-10294467.75</td>\n",
       "      <td>-768535.5</td>\n",
       "      <td>14144314.50</td>\n",
       "      <td>356057266.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spring</th>\n",
       "      <td>1331.0</td>\n",
       "      <td>9.935669e+06</td>\n",
       "      <td>5.109783e+07</td>\n",
       "      <td>-201941321.0</td>\n",
       "      <td>-8171652.00</td>\n",
       "      <td>-484567.0</td>\n",
       "      <td>14455140.00</td>\n",
       "      <td>449998007.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Summer</th>\n",
       "      <td>1415.0</td>\n",
       "      <td>1.566553e+07</td>\n",
       "      <td>5.583782e+07</td>\n",
       "      <td>-307237650.0</td>\n",
       "      <td>-7361893.00</td>\n",
       "      <td>817468.0</td>\n",
       "      <td>25069405.50</td>\n",
       "      <td>437270625.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Winter</th>\n",
       "      <td>1484.0</td>\n",
       "      <td>9.123205e+06</td>\n",
       "      <td>5.097822e+07</td>\n",
       "      <td>-150000000.0</td>\n",
       "      <td>-9962407.75</td>\n",
       "      <td>-649276.5</td>\n",
       "      <td>17324895.25</td>\n",
       "      <td>630662225.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         count          mean           std          min          25%  \\\n",
       "Season                                                                 \n",
       "Fall    1552.0  6.792027e+06  4.101982e+07 -120702809.0 -10294467.75   \n",
       "Spring  1331.0  9.935669e+06  5.109783e+07 -201941321.0  -8171652.00   \n",
       "Summer  1415.0  1.566553e+07  5.583782e+07 -307237650.0  -7361893.00   \n",
       "Winter  1484.0  9.123205e+06  5.097822e+07 -150000000.0  -9962407.75   \n",
       "\n",
       "             50%          75%          max  \n",
       "Season                                      \n",
       "Fall   -768535.5  14144314.50  356057266.0  \n",
       "Spring -484567.0  14455140.00  449998007.0  \n",
       "Summer  817468.0  25069405.50  437270625.0  \n",
       "Winter -649276.5  17324895.25  630662225.0  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Seasonal_ROI.groupby('Season')['ROI'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6be284f-28bb-4c06-b0e2-f1eebe66199c",
   "metadata": {},
   "source": [
    "## work on finalizing genre data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "b7c52fe2-1889-48ac-91e0-27dd3ed8a98f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie           genres        ROI\n",
       "0  Avatar           Horror  335507625\n",
       "1  Avatar           Action  335507625\n",
       "2  Avatar        Adventure  335507625\n",
       "3  Avatar          Fantasy  335507625\n",
       "4  Avatar  Science Fiction  335507625"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "1987c995-f6e6-4115-ab4a-05f322fc9b0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11805"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movie_genre_analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "c08ce297-ed30-4d87-8b15-293ef46c031e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>NaN</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Star Wars Ep. VII: The Force Awakens</td>\n",
       "      <td>NaN</td>\n",
       "      <td>630662225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>Pirates of the Caribbean: At Worldâs End</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9420425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>Spider-Man 3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78530303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>Harry Potter and the Half-Blood Prince</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52089278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85417</th>\n",
       "      <td>Cavite</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85418</th>\n",
       "      <td>The Mongol King</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-6100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85428</th>\n",
       "      <td>Following</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85429</th>\n",
       "      <td>Return to the Land of Wonders</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-3662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85439</th>\n",
       "      <td>My Date With Drew</td>\n",
       "      <td>NaN</td>\n",
       "      <td>179941</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3509 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            movie genres        ROI\n",
       "50              Star Wars Ep. VIII: The Last Jedi    NaN  303181382\n",
       "51           Star Wars Ep. VII: The Force Awakens    NaN  630662225\n",
       "70     Pirates of the Caribbean: At Worldâs End    NaN    9420425\n",
       "212                                  Spider-Man 3    NaN   78530303\n",
       "267        Harry Potter and the Half-Blood Prince    NaN   52089278\n",
       "...                                           ...    ...        ...\n",
       "85417                                      Cavite    NaN      63071\n",
       "85418                             The Mongol King    NaN      -6100\n",
       "85428                                   Following    NaN      42482\n",
       "85429               Return to the Land of Wonders    NaN      -3662\n",
       "85439                           My Date With Drew    NaN     179941\n",
       "\n",
       "[3509 rows x 3 columns]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis[movie_genre_analysis['genres'].isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "cf58d7c0-bd7b-4bf0-a82d-6f2cc0a9a9d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/p_/7g5qyc8d5zv5nfywm65yhpkc0000gn/T/ipykernel_98186/382099810.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  movie_genre_analysis.dropna(subset=['genres'], inplace=True)\n"
     ]
    }
   ],
   "source": [
    "movie_genre_analysis.dropna(subset=['genres'], inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "9b47523a-d450-4d24-a461-0590c7a87a3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8296"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(movie_genre_analysis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "d2beae85-9f59-4e60-a5a8-92c100200165",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    movie           genres        ROI\n",
       "0  Avatar           Horror  335507625\n",
       "1  Avatar           Action  335507625\n",
       "2  Avatar        Adventure  335507625\n",
       "3  Avatar          Fantasy  335507625\n",
       "4  Avatar  Science Fiction  335507625"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "77016423-e98c-47ac-b1d6-35cb6113d77f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>genres</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Horror</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Action</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Adventure</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Fantasy</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Science Fiction</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            genres        ROI\n",
       "0           Horror  335507625\n",
       "1           Action  335507625\n",
       "2        Adventure  335507625\n",
       "3          Fantasy  335507625\n",
       "4  Science Fiction  335507625"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genre_ROI=movie_genre_analysis[['genres','ROI']]\n",
    "Genre_ROI.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7803362-03cd-48f6-a8a5-3da9e93bb396",
   "metadata": {},
   "source": [
    "## work on finalizing budget data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f1941a2c-2bd5-4cfd-b2a8-3554ebafad36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie</th>\n",
       "      <th>production_budget</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Pirates of the Caribbean: On Stranger Tides</td>\n",
       "      <td>410600000</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Dark Phoenix</td>\n",
       "      <td>350000000</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Avengers: Age of Ultron</td>\n",
       "      <td>330600000</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Star Wars Ep. VIII: The Last Jedi</td>\n",
       "      <td>317000000</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          movie  production_budget        ROI\n",
       "0                                        Avatar          425000000  335507625\n",
       "5   Pirates of the Caribbean: On Stranger Tides          410600000 -169536125\n",
       "23                                 Dark Phoenix          350000000 -307237650\n",
       "32                      Avengers: Age of Ultron          330600000  128405868\n",
       "50            Star Wars Ep. VIII: The Last Jedi          317000000  303181382"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "3027e077-a3eb-49de-8a31-c7a9555624eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>production_budget</th>\n",
       "      <th>ROI</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>425000000</td>\n",
       "      <td>335507625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>410600000</td>\n",
       "      <td>-169536125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>350000000</td>\n",
       "      <td>-307237650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>330600000</td>\n",
       "      <td>128405868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>317000000</td>\n",
       "      <td>303181382</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    production_budget        ROI\n",
       "0           425000000  335507625\n",
       "5           410600000 -169536125\n",
       "23          350000000 -307237650\n",
       "32          330600000  128405868\n",
       "50          317000000  303181382"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Budget_ROI= budget_analysis[['production_budget', 'ROI']]\n",
    "Budget_ROI.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "3b0c45c6-59b2-4f6a-85de-5fc8a383c3f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5698"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Budget_ROI)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ee0e92a-d7b0-4d97-9a35-b8d36e11c9d9",
   "metadata": {},
   "source": [
    "## start exploring the data distrobutions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9484fcd-c6c0-4581-bf6e-cd8db758d7d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Seasonal_ROI\n",
    "#Genre_ROI\n",
    "#Budget_ROI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "f223a45a-ee6d-4eb6-a277-0c9c65a624c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Season\n",
       "Fall      1552\n",
       "Winter    1484\n",
       "Summer    1415\n",
       "Spring    1331\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Seasonal_ROI['Season'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "8213fb56-d8b7-4563-9ec4-4d3f8085c830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1484.,    0.,    0., 1331.,    0.,    0., 1415.,    0.,    0.,\n",
       "        1552.]),\n",
       " array([0. , 0.3, 0.6, 0.9, 1.2, 1.5, 1.8, 2.1, 2.4, 2.7, 3. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(Seasonal_ROI['Season'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "66b8853f-0086-4be2-bf10-c969a439fa34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1.000e+00, 1.300e+01, 5.500e+02, 4.763e+03, 3.430e+02, 7.200e+01,\n",
       "        2.800e+01, 8.000e+00, 3.000e+00, 1.000e+00]),\n",
       " array([-3.07237650e+08, -2.13447662e+08, -1.19657675e+08, -2.58676875e+07,\n",
       "         6.79223000e+07,  1.61712288e+08,  2.55502275e+08,  3.49292262e+08,\n",
       "         4.43082250e+08,  5.36872238e+08,  6.30662225e+08]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(Seasonal_ROI['ROI'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "a3b07e72-b153-48e3-988f-1ee5287f18e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "genres\n",
       "Drama              1436\n",
       "Comedy              849\n",
       "Thriller            764\n",
       "Action              736\n",
       "Adventure           530\n",
       "Horror              434\n",
       "Crime               429\n",
       "Romance             410\n",
       "Documentary         362\n",
       "Mystery             314\n",
       "Family              309\n",
       "Fantasy             278\n",
       "Science Fiction     246\n",
       "Biography           235\n",
       "Sci-Fi              223\n",
       "Animation           168\n",
       "History             135\n",
       "Music               109\n",
       "Documetary           87\n",
       "War                  86\n",
       "Sport                71\n",
       "Western              36\n",
       "Musical              31\n",
       "TV Movie             10\n",
       "News                  7\n",
       "Reality-TV            1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genre_ROI['genres'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff30e285-1cfe-46d4-9104-b62424411e43",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "97101ad5-61ab-4668-b3cb-2bbcc2f4b609",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "genres\n",
       "News              -1.864393e+07\n",
       "Western           -5.979256e+06\n",
       "Reality-TV        -1.000000e+06\n",
       "History           -7.656518e+05\n",
       "Documetary         2.072152e+06\n",
       "TV Movie           3.398330e+06\n",
       "Crime              4.684635e+06\n",
       "Documentary        4.804843e+06\n",
       "Thriller           5.314386e+06\n",
       "War                6.212424e+06\n",
       "Action             6.833459e+06\n",
       "Drama              7.145398e+06\n",
       "Mystery            7.384437e+06\n",
       "Biography          8.309352e+06\n",
       "Horror             8.589921e+06\n",
       "Romance            9.438491e+06\n",
       "Sport              9.652116e+06\n",
       "Fantasy            1.343444e+07\n",
       "Music              1.345080e+07\n",
       "Adventure          1.422713e+07\n",
       "Comedy             1.496960e+07\n",
       "Science Fiction    1.695967e+07\n",
       "Sci-Fi             1.913102e+07\n",
       "Family             2.307126e+07\n",
       "Animation          3.670118e+07\n",
       "Musical            3.938993e+07\n",
       "Name: ROI, dtype: float64"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Genre_ROI.groupby('genres')['ROI'].mean().sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "1ddbb52d-bfdc-4122-a8e2-b715af3281ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
       "        17, 18, 19, 20, 21, 22, 23, 24, 25]),\n",
       " [Text(0, 0, 'Horror'),\n",
       "  Text(1, 0, 'Action'),\n",
       "  Text(2, 0, 'Adventure'),\n",
       "  Text(3, 0, 'Fantasy'),\n",
       "  Text(4, 0, 'Science Fiction'),\n",
       "  Text(5, 0, 'Sci-Fi'),\n",
       "  Text(6, 0, 'Thriller'),\n",
       "  Text(7, 0, 'Crime'),\n",
       "  Text(8, 0, 'Drama'),\n",
       "  Text(9, 0, 'Western'),\n",
       "  Text(10, 0, 'Animation'),\n",
       "  Text(11, 0, 'Comedy'),\n",
       "  Text(12, 0, 'Family'),\n",
       "  Text(13, 0, 'History'),\n",
       "  Text(14, 0, 'Documentary'),\n",
       "  Text(15, 0, 'Musical'),\n",
       "  Text(16, 0, 'Documetary'),\n",
       "  Text(17, 0, 'Romance'),\n",
       "  Text(18, 0, 'Mystery'),\n",
       "  Text(19, 0, 'Biography'),\n",
       "  Text(20, 0, 'War'),\n",
       "  Text(21, 0, 'Sport'),\n",
       "  Text(22, 0, 'Music'),\n",
       "  Text(23, 0, 'News'),\n",
       "  Text(24, 0, 'TV Movie'),\n",
       "  Text(25, 0, 'Reality-TV')])"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.set_theme(style=\"ticks\", palette=\"pastel\")\n",
    "\n",
    "# Load the example tips dataset\n",
    "plt.figure(figsize=(10, 10))\n",
    "# Draw a nested boxplot to show bills by day and time\n",
    "sns.boxplot(x=\"genres\", y=\"ROI\", \n",
    "            #hue=\"smoker\", palette=[\"m\", \"g\"],\n",
    "            data=Genre_ROI)\n",
    "sns.despine(offset=10, trim=True)\n",
    "\n",
    "plt.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "530a089b-a229-4393-99e2-f4175970d45f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([3.000e+00, 1.500e+01, 2.650e+02, 5.799e+03, 1.727e+03, 2.890e+02,\n",
       "        9.700e+01, 5.600e+01, 3.200e+01, 1.300e+01]),\n",
       " array([-3.07237650e+08, -2.26507928e+08, -1.45778207e+08, -6.50484852e+07,\n",
       "         1.56812364e+07,  9.64109580e+07,  1.77140680e+08,  2.57870401e+08,\n",
       "         3.38600123e+08,  4.19329844e+08,  5.00059566e+08]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(Genre_ROI['ROI'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "4df1965a-d3fa-42df-8c43-7e9bbc788adc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "production_budget\n",
       "20000000    226\n",
       "10000000    209\n",
       "30000000    175\n",
       "15000000    171\n",
       "40000000    170\n",
       "           ... \n",
       "14400000      1\n",
       "14600000      1\n",
       "15250000      1\n",
       "15300000      1\n",
       "1100          1\n",
       "Name: count, Length: 500, dtype: int64"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#most definitely going to have to bin these\n",
    "\n",
    "Budget_ROI['production_budget'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "bf439281-2003-47dd-815c-b78da861cc0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    5.698000e+03\n",
       "mean     3.181423e+07\n",
       "std      4.197735e+07\n",
       "min      1.100000e+03\n",
       "25%      5.000000e+06\n",
       "50%      1.700000e+07\n",
       "75%      4.000000e+07\n",
       "max      4.250000e+08\n",
       "Name: production_budget, dtype: float64"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Budget_ROI['production_budget'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "47fa2b2b-f4a6-4191-bccb-c3ad37759c02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([4.366e+03, 8.480e+02, 2.280e+02, 1.440e+02, 7.700e+01, 1.900e+01,\n",
       "        6.000e+00, 7.000e+00, 1.000e+00, 2.000e+00]),\n",
       " array([1.1000000e+03, 4.2500990e+07, 8.5000880e+07, 1.2750077e+08,\n",
       "        1.7000066e+08, 2.1250055e+08, 2.5500044e+08, 2.9750033e+08,\n",
       "        3.4000022e+08, 3.8250011e+08, 4.2500000e+08]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(Budget_ROI['production_budget'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "adb5a68b-a3ae-46c9-bf8d-5714be396036",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1.000e+00, 1.300e+01, 5.450e+02, 4.695e+03, 3.350e+02, 7.000e+01,\n",
       "        2.800e+01, 7.000e+00, 3.000e+00, 1.000e+00]),\n",
       " array([-3.07237650e+08, -2.13447662e+08, -1.19657675e+08, -2.58676875e+07,\n",
       "         6.79223000e+07,  1.61712288e+08,  2.55502275e+08,  3.49292262e+08,\n",
       "         4.43082250e+08,  5.36872238e+08,  6.30662225e+08]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(Budget_ROI['ROI'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "b661f5df-032c-4069-a074-2ecfc990a834",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x2a738bfd0>"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Budget_ROI['production_budget'], Budget_ROI['ROI'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "abd81500-b912-4124-af59-96a21c513843",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x2a9d46cd0>"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 758.25x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.set_theme(style=\"white\")\n",
    "\n",
    "# Load the example mpg dataset\n",
    "\n",
    "# Plot miles per gallon against horsepower with other semantics\n",
    "sns.relplot(x='production_budget', y='ROI', hue='genres',\n",
    "            sizes=(40, 400), alpha=.5, palette=\"muted\",\n",
    "            height=6, data=movies_df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "3664d03b-8b25-4cfe-acbe-0b59efd42f8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "movie\n",
       "Home                 48\n",
       "The Gift             22\n",
       "Legend               18\n",
       "Crossroads           16\n",
       "Life                 16\n",
       "                     ..\n",
       "The Beaver            1\n",
       "Held Up               1\n",
       "For Colored Girls     1\n",
       "Blockers              1\n",
       "The Namesake          1\n",
       "Name: count, Length: 2424, dtype: int64"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_genre_analysis['movie'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "5cd955ed-0e05-47ca-ac83-504d6e56f0f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "movie\n",
       "Avatar                1\n",
       "Ultramarines          1\n",
       "Glitter               1\n",
       "Bright Star           1\n",
       "Club Dread            1\n",
       "                     ..\n",
       "The Age of Adaline    1\n",
       "Glory Road            1\n",
       "John Wick             1\n",
       "Pokemon 2000          1\n",
       "My Date With Drew     1\n",
       "Name: count, Length: 5698, dtype: int64"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "budget_analysis['movie'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78fce337-3476-48ce-a11e-437a2128f896",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
